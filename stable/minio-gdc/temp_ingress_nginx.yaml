---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    app: nginx-ingress-minio-controller
    kubernetes.io/cluster-service: "true"
  name: nginx-ingress-minio-controller-role
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resourceNames:
  - ingress-controller-leader-addon-http-application-routing
  resources:
  - configmaps
  verbs:
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    app: addon-http-application-routing-ingress-nginx
    kubernetes.io/cluster-service: "true"
  name: my-addon-http-application-routing-nginx-ingress-role-binding
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-addon-http-application-routing-nginx-ingress-role
subjects:
- kind: ServiceAccount
  name: addon-http-application-routing-nginx-ingress-serviceaccount
  namespace: kube-system
---
kind: ConfigMap
apiVersion: v1
data:
  disable-ipv6: "true"
  server-tokens: "false"
  ignore-invalid-headers: "false"
  proxy-request-buffering: "off"
  proxy-body-size: "0"
metadata:
  name: nginx-gdc-minio-conf
  namespace: minio
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: nginx-ingress-minio-controller
  namespace: minio
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
        k8s-app: nginx-ingress-minio
  template:
    metadata:
      labels:
        k8s-app: nginx-ingress-minio
      annotations:
        prometheus.io/port: '10254'
        prometheus.io/scrape: 'true'
    spec:
      hostNetwork: true
      serviceAccountName: nginx-ingress-serviceaccount
      containers:
        - name: nginx-ingress-controller
          image: harbor.intgdc.com/3rdparty/kubernetes-ingress-controller/nginx-ingress-controller:0.15.0
          env:
             - name: POD_NAME
               valueFrom:
                 fieldRef:
                   fieldPath: metadata.name
             - name: POD_NAMESPACE
               valueFrom:
                 fieldRef:
                   fieldPath: metadata.namespace
          args:
             - /nginx-ingress-controller
             - --default-backend-service=default/default-http-backend
             - --default-ssl-certificate=$(POD_NAMESPACE)/tls-certificate
             - --ingress-class=nginx-minio
             - --enable-ssl-passthrough
             - --configmap=$(POD_NAMESPACE)/nginx-gdc-minio-conf
             - --http-port=32080
             - --https-port=32443
             - --status-port=32444
             - --healthz-port=32445
             - --ssl-passtrough-proxy-port=32446
          # For the hostNetwork we dedicate ports 32000-32768,
          # since 32768-60999 are the default ephemeral ports.
          ports:
          - containerPort: 32080
            hostPort: 32080
          - containerPort: 32443
            hostPort: 32443
          readinessProbe:
            httpGet:
              path: /healthz
              port: 32445
              scheme: HTTP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 32445
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx-minio"
  name: my-minio-ingress
  namespace: minio
spec:
  rules:
  - host: minio.k8s.gooddata
    http:
      paths:
      - path: /
        backend:
          serviceName: minio-cluster-1
          servicePort: 9000
